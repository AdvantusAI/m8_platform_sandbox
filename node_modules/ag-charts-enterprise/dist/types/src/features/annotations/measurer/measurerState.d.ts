import { _ModuleSupport, _Util } from 'ag-charts-community';
import type { AnnotationsStateMachineContext, MeasurerPropertiesType } from '../annotationsSuperTypes';
import { DatePriceRangeProperties, DateRangeProperties, PriceRangeProperties, QuickDatePriceRangeProperties } from './measurerProperties';
import type { MeasurerScene } from './measurerScene';
declare const StateMachine: typeof _ModuleSupport.StateMachine;
interface MeasurerStateMachineContext<Datum extends MeasurerPropertiesType> extends Omit<AnnotationsStateMachineContext, 'create'> {
    create: (datum: Datum) => void;
    delete: () => void;
    datum: () => Datum | undefined;
    node: () => MeasurerScene | undefined;
    showAnnotationOptions: () => void;
}
declare abstract class MeasurerTypeStateMachine<Datum extends MeasurerPropertiesType> extends StateMachine<'start' | 'end', 'click' | 'hover' | 'drag' | 'dragEnd' | 'reset' | 'cancel'> {
    debug: _Util.DebugLogger;
    constructor(ctx: MeasurerStateMachineContext<Datum>);
    abstract createDatum(): Datum;
}
export declare class DateRangeStateMachine extends MeasurerTypeStateMachine<DateRangeProperties> {
    createDatum(): DateRangeProperties;
}
export declare class PriceRangeStateMachine extends MeasurerTypeStateMachine<PriceRangeProperties> {
    createDatum(): PriceRangeProperties;
}
export declare class DatePriceRangeStateMachine extends MeasurerTypeStateMachine<DatePriceRangeProperties> {
    createDatum(): DatePriceRangeProperties;
}
export declare class QuickDatePriceRangeStateMachine extends MeasurerTypeStateMachine<QuickDatePriceRangeProperties> {
    createDatum(): QuickDatePriceRangeProperties;
}
export {};
